Build1=Default,sadLogic.OctoTouchController
File1=dlggeneral.json
File10=menufiles.png
File11=menumovement.png
File12=menuprint.png
File13=no_thumbnail.jpg
File14=pageFiles.bal
File15=pageMenu.bal
File16=pageMovement.bal
File17=pagePrinting.bal
File18=splash.png
File19=viewfiles.bal
File2=dlgLogging.json
File20=viewMsgBox.bal
File21=viewOctoSetup.bal
File22=viewPsuCtrl.bal
File23=viewPsuSetup.bal
File24=viewRoundSlider.bal
File3=dlgPower.json
File4=dlgSimpleApiOnOff.json
File5=MainPage.bal
File6=mb_info.png
File7=mb_question.png
File8=mb_stop.png
File9=menucard.bal
FileGroup1=JSON_CONFIGS
FileGroup10=MAIN_MENU
FileGroup11=MAIN_MENU
FileGroup12=MAIN_MENU
FileGroup13=MISC
FileGroup14=VIEWS_PAGES
FileGroup15=VIEWS_PAGES
FileGroup16=VIEWS_PAGES
FileGroup17=VIEWS_PAGES
FileGroup18=MISC
FileGroup19=VIEWS
FileGroup2=JSON_CONFIGS
FileGroup20=DIALOG_CUSTOM_VIEWS
FileGroup21=DIALOG_CUSTOM_VIEWS
FileGroup22=DIALOG_CUSTOM_VIEWS
FileGroup23=DIALOG_CUSTOM_VIEWS
FileGroup24=DIALOG_CUSTOM_VIEWS
FileGroup3=JSON_CONFIGS
FileGroup4=JSON_CONFIGS
FileGroup5=B4XPages
FileGroup6=MISC
FileGroup7=MISC
FileGroup8=MISC
FileGroup9=VIEWS
Group=MAIN
Library1=accessibility
Library10=json
Library11=keyvaluestore
Library12=okhttp
Library13=okhttputils2
Library14=oslibrary
Library15=phone
Library16=reflection
Library17=runtimepermissions
Library18=xui views
Library2=b4xcollections
Library3=b4xpages
Library4=b4xpreferencesdialog
Library5=bctoast
Library6=byteconverter
Library7=core
Library8=dateutils
Library9=javaobject
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="14" android:targetSdkVersion="30"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~~\n~CreateResourceFromFile(Macro, Themes.LightTheme)~\n~'End of default text.~\n~~\n~'--- https://www.b4x.com/android/forum/threads/android-jar-targetsdkversion-minsdkversion.87610/~\n~'--- Non-ssl (non-https) communication is not permitted by default. It can be enabled in B4A v9+ by adding this line to the manifest editor:~\n~CreateResourceFromFile(Macro, Core.NetworkClearText)~\n~~\n~'--- Take over power functions~\n~AddPermission(android.permission.WAKE_LOCK)~\n~AddPermission(android.permission.WRITE_SETTINGS)~\n~AddPermission(android.permission.REQUEST_INSTALL_PACKAGES)~\n~~\n~~\n~~\n~''''https://www.b4x.com/android/forum/threads/android-jar-targetsdkversion-minsdkversion.87610/~\n~''''Non-ssl (non-https) communication is not permitted by default. It can be enabled in B4A v9+ by adding this line to the manifest editor:~\n~'''CreateResourceFromFile(Macro, Core.NetworkClearText)~\n~'''~\n~'''AddManifestText(~\n~'''~\n~'''	<Activity android:launchMode="singleInstance" />~\n~'''	<uses-sdk android:minSdkVersion="16" android:targetSdkVersion="18"/>~\n~'''	~\n~'''	<supports-screens android:largeScreens="true" ~\n~'''	    android:xlargeScreens="true"~\n~'''    	android:normalScreens="false" ~\n~'''    	android:smallScreens="false" ~\n~'''		android:requiresSmallestWidthDp="800"~\n~'''    	android:anyDensity="true"/>~\n~'''~\n~'''		~\n~'''	<uses-permission android:name="android.permission.CHANGE_WIFI_MULTICAST_STATE"/>~\n~'''	<uses-permission android:name="android.permission.GET_ACCOUNTS" />~\n~'''	~\n~''')~\n~'''~\n~'''SetActivityAttribute(main, android:windowSoftInputMode, adjustPan|stateHidden)~\n~'''~\n~'''SetApplicationAttribute(android:hardwareAccelerated, "true")~\n~'''SetApplicationAttribute(android:theme, "@android:style/Theme.Holo.Light")~\n~'''SetApplicationAttribute(android:icon, "@drawable/icon")~\n~'''SetApplicationAttribute(android:label, "$LABEL$")~\n~'''~\n~'''AddPermission(android.permission.REBOOT)~\n~'''AddPermission(android.permission.WAKE_LOCK)~\n~'''AddPermission(android.permission.ACCESS_NETWORK_STATE)~\n~'''~\n~'''#if not (KE)~\n~'''AddPermission(android.permission.MEDIA_UNMOUNTED)~\n~'''AddPermission(android.permission.MEDIA_MOUNTED)~\n~'''~\n~'''AddReceiverText(svrMediaHelper,~\n~'''<intent-filter>~\n~'''    <action android:name="android.intent.action.MEDIA_MOUNTED" />~\n~'''	<data android:scheme="file"/>~\n~'''</intent-filter>)~\n~'''~\n~'''AddReceiverText(svrMediaHelper,~\n~'''<intent-filter>~\n~'''    <action android:name="android.intent.action.MEDIA_UNMOUNTED" />~\n~'''	<data android:scheme="file"/>~\n~'''</intent-filter>)~\n~'''#end if~\n~'''~\n~'''#if not (KE)~\n~'''AddReceiverText(eu.dgconsulting.appupdating.newinst2,~\n~'''  <intent-filter>~\n~'''  <action android:name="android.intent.action.PACKAGE_REPLACED" />~\n~'''    <data android:scheme="package" />~\n~'''  </intent-filter>)~\n~''' #end if~\n~~\n~
Module1=|relative|src\miscClasses\AppUpdate
Module10=|relative|src\dialogs\dlgBrightness
Module11=|relative|src\dialogs\dlgGeneralOptions
Module12=|relative|src\dialogs\dlgListbox
Module13=|relative|src\dialogs\dlgMsgBox
Module14=|relative|src\dialogs\dlgNumericInput
Module15=|relative|src\dialogs\dlgOctoSetup
Module16=|relative|src\dialogs\dlgOnOffCtrl
Module17=|relative|src\dialogs\dlgPowerOptions
Module18=|relative|src\dialogs\dlgPsuCtrl
Module19=|relative|src\dialogs\dlgPsuSetup
Module2=|relative|src\custom_controls\AutoTextSizeLabel
Module20=|relative|src\dialogs\dlgZLEDSetup
Module21=|relative|src\helperClasses\fileHelpers
Module22=|relative|src\miscClasses\FileProvider
Module23=|relative|src\generic\fnc
Module24=|relative|src\generic\gblConst
Module25=|relative|src\helperClasses\guiHelpers
Module26=|relative|src\miscClasses\HttpDownloadStr
Module27=|relative|src\octoPrint\HttpOctoRestAPI
Module28=|relative|src\octoPrint\JSONparsors\JsonParserFiles
Module29=|relative|src\octoPrint\JSONparsors\JsonParserMasterPrinterSettings
Module3=|relative|src\B4XPages\B4XMainPage
Module30=|relative|src\octoPrint\JSONparsors\JsonParsorConnectionStatus
Module31=|relative|src\octoPrint\JSONparsors\JsonParsorMain
Module32=|relative|src\octoPrint\JSONparsors\JsonParsorOctoVersion
Module33=|relative|src\custom_controls\lmB4XImageViewX
Module34=|relative|src\generic\logMe
Module35=|relative|src\main\MasterController
Module36=|relative|src\helperClasses\objHelpers
Module37=|relative|src\octoPrint\oc
Module38=|relative|src\pageViews\pageFiles
Module39=|relative|src\pageViews\pageMenu
Module4=|relative|src\miscClasses\CallSubUtils
Module40=|relative|src\pageViews\pageMovement
Module41=|relative|src\pageViews\pagePrinting
Module42=|relative|src\helperClasses\powerHelpers
Module43=|relative|src\octoPrint\RequestApiKey
Module44=|relative|src\custom_controls\sadPreferencesDialog
Module45=|relative|src\custom_controls\sadRoundSlider
Module46=|relative|src\main\Starter
Module47=|relative|src\helperClasses\strHelpers
Module48=|relative|src\miscClasses\SysInfo
Module49=|relative|src\miscClasses\WildCardFilesList
Module5=|relative|src\octoPrint\CheckOctoConnection
Module6=|relative|src\custom_controls\CircularProgressBar
Module7=|relative|src\generic\clrTheme
Module8=|relative|src\miscClasses\clvSelectionsX
Module9=|relative|src\generic\config
NumberOfFiles=24
NumberOfLibraries=18
NumberOfModules=49
Version=11.8
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: OctoTC
	#VersionCode: 6
	#VersionName: 1.0
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: landscape
	#CanInstallToExternalStorage: false
#End Region

#Region  Activity Attributes 
	#FullScreen: True
	#IncludeTitle: False
	'#DebuggerForceFullDeployment: true
	'#DebuggerForceStandardAssets: true
	#BridgeLogger: True
	
#End Region


'open project objects folder: ide://run?File=%WINDIR%\explorer.exe&Args=%PROJECT%
'Ctrl + click to export as zip: ide://run?=&File=%B4X%\Zipper.jar&Args=Project.zip

Sub Process_Globals
	
	Public ActionBarHomeClicked As Boolean
			
	'--- timers need to be in 'Process_Globals'
	Private tmrMain As Timer
	Private tmrFilesCheckChange As Timer
	Private tmrScreen As Timer
	
End Sub

Sub Globals
	Private mModule As String = "Main"
	Private Const API_ANDROID_4_0 As Int = 14
	Private Const API_ANDROID_4_4 As Int = 19
	Private ph As Phone	
End Sub


'===================================================================================

Sub Activity_Create(FirstTime As Boolean)
	
	Starter.FirstRun = FirstTime
	
	If FirstTime Then
		Log("Activity_Create - FirstTime = True")
		#if debug
		Starter.tmrTimerCallSub.CallSubDelayedPlus(Me,"tmrSplash_Tick",1000)   '--- just a splash screen
		#else
		Starter.tmrTimerCallSub.CallSubDelayedPlus(Me,"tmrSplash_Tick",3500)   '--- just a splash screen
		#End If
	Else
		Log("Activity_Create - FirstTime = False")
	End If
	
'	If mSslFixIssue.IsInitialized = False Then
'		mSslFixIssue.Initialize(Me)
'		mSslFixIssue.TryToFix
'		Wait For ("SslIssueFixed") Complete (Fixed As Boolean)
'		Starter.SslIssueFixed = Fixed
'	End If
		
	If tmrScreen.IsInitialized = False Then _
		tmrScreen.Initialize("tmrScreenPower",15000)	'--- init, will be reset later
	
	If tmrFilesCheckChange.IsInitialized = False Then _
		tmrFilesCheckChange.Initialize("tmrFilesCheckChange",8000) '--- octo files check change
	
	If tmrMain.IsInitialized = False Then _
		tmrMain.Initialize("tmrMain",2100) 	'--- main loop
		
	SetupFullScrn
	
	Dim pm As B4XPagesManager
	pm.Initialize(Activity)
	
End Sub



'===================================================================================

#Region "SCREEN_STUFF"
Private Sub SetupFullScrn
	
	'https://www.b4x.com/android/forum/threads/immersive-mode-hide-the-navigation-bar.90882/
	
	Dim lv As LayoutValues
	
	If ph.SdkVersion >= 28 Then
		'--- cutout mode...  ????
		Dim ctxt As JavaObject
		ctxt.InitializeContext
		ctxt.RunMethodJO("getWindow", Null).RunMethodJO("getAttributes", Null).SetField("layoutInDisplayCutoutMode", 1)
	End If

	If ph.SdkVersion >= 19 Then
		Activity_WindowFocusChanged(True)
		lv = GetRealSize
		Dim jo As JavaObject = Activity
		jo.RunMethod("setBottom", Array(lv.Height))
		jo.RunMethod("setRight", Array(lv.Width))
		Activity.Height = lv.Height
		Activity.Width = lv.Width
	Else
		'--- size *WITH* taskbar
		lv = GetDeviceLayoutValues
	End If
	
	guiHelpers.gScreenSizeAprox = lv.ApproximateScreenSize
	Dim ac As Accessibility : guiHelpers.gFscale = ac.GetUserFontScale
	
End Sub


Private Sub GetRealSize() As LayoutValues 
	
	Dim lv As LayoutValues
	Dim ctxt As JavaObject
	ctxt.InitializeContext
	Dim WindowManager As JavaObject = ctxt.RunMethodJO("getSystemService", Array("window"))
	Dim display As JavaObject = WindowManager.RunMethod("getDefaultDisplay", Null)
	Dim point As JavaObject
	point.InitializeNewInstance("android.graphics.Point", Null)
	display.RunMethod("getRealSize", Array(point))
	lv.Width = point.GetField("x")
	lv.Height = point.GetField("y")
	lv.Scale = 100dip / 100
	Return lv
	
End Sub
#end region


#region "TIMERS"
Private Sub tmrMain_Tick
	'--- master loop timer
	CallSub(B4XPages.MainPage.MasterCtrlr,"tmrMain_Tick")
End Sub

Private Sub tmrFilesCheckChange_Tick
	'--- when files page is in focus, check files
	CallSub(B4XPages.MainPage.MasterCtrlr,"tmrFilesCheckChange_Tick")
End Sub

Private Sub tmrSplash_Tick
	CallSubDelayed(B4XPages.MainPage,"HideSplash_StartUp")
End Sub


Public Sub tmrScreenPower_Tick
	
	Set_ScreenTmr
	
	Dim InSub As String = "tmrScreenPower_Tick"
	If config.logPOWER_EVENTS Or config.logTIMER_EVENTS Then 
		logMe.LogIt2("tmrScreenPower_Tick fired: " & tmrScreen.Interval,mModule,InSub)
	End If
	If oc.isPrinting Then 
		If config.logPOWER_EVENTS Then 
			logMe.LogIt2("We are printing",mModule,InSub)
		End If
		Set_ScreenTmr
		Return
	End If
	
	tmrScreen.Enabled = False
	fnc.BlankScreen
	
End Sub

'--- timer control subs --- --- timer control subs ---
'--- timer control subs --- --- timer control subs ---

Public Sub Set_ScreenTmr()

	If config.logTIMER_EVENTS Then logMe.LogIt("Set_ScreenTmr",mModule)
	
	Dim inSub As String = "Set_ScreenTmr"
	tmrScreen.Enabled = False

	If config.AndroidTakeOverSleepFLAG = False Then	
		If config.logPOWER_EVENTS Then logMe.LogIt("Power control is off",mModule)
		Return
	End If
	
	'--- any screen time flags set?
	If (config.AndroidNotPrintingScrnOffFLAG Or config.AndroidPrintingScrnOffFLAG) Then
		If oc.isPrinting And config.AndroidPrintingScrnOffFLAG Then
			If config.logPOWER_EVENTS Then 
				logMe.LogIt2("AndroidPrintingScrnOffFLAG = True: Min: " & config.AndroidPrintingMinTill,mModule,inSub)
			End If
			tmrScreen.Interval = config.AndroidPrintingMinTill * 1000 * 60 '--- we are printing
		Else
			If config.logPOWER_EVENTS Then 
				logMe.LogIt2("AndroidNotPrintingScrnOffFLAG = True: Min: " & config.AndroidNotPrintingMinTill,mModule,inSub)
			End If
			tmrScreen.Interval = config.AndroidNotPrintingMinTill * 1000 * 60
		End If
		tmrScreen.Enabled = True
	End If
	
	Dim_ActionBar(gblConst.ACTIONBAR_OFF) '--- turn off if it is on
	
End Sub

Public Sub TurnOnOff_ScreenTmr(EnableDisable As Boolean)
	If config.logTIMER_EVENTS Then logMe.LogIt("screen tmr on: " & EnableDisable,mModule)
	tmrScreen.Enabled = EnableDisable
End Sub

Public Sub TurnOnOff_MainTmr(EnableDisable As Boolean)
	If config.logTIMER_EVENTS Then logMe.LogIt("main tmr on: " & EnableDisable,mModule)
	tmrMain.Enabled = EnableDisable
End Sub

Public Sub TurnOnOff_FilesCheckChangeTmr(EnableDisable As Boolean)
	If config.logFILE_EVENTS Then logMe.LogIt("file tmr on: " & EnableDisable,mModule)
	If config.logTIMER_EVENTS Then logMe.LogIt("file tmr on: " & EnableDisable,mModule)
	tmrFilesCheckChange.Enabled = EnableDisable
End Sub

#end region

'===================================================================================
'==================================================================================

Sub Activity_WindowFocusChanged(HasFocus As Boolean)
	
	If ph.SdkVersion < API_ANDROID_4_4 Then Return 
	
	'--- restore imersive mode
	If HasFocus Then
		Try
			Dim jo As JavaObject = Activity
			Sleep(300)
			jo.RunMethod("setSystemUiVisibility", Array As Object(5894)) '3846 - non-sticky
		Catch
			Log("error")
			'Log(LastException) 'This can cause another error
		End Try 'ignore
		
	End If
End Sub

'Template version: B4A-1.01
#Region Delegates

Sub Activity_ActionBarHomeClick
	ActionBarHomeClicked = True
	B4XPages.Delegate.Activity_ActionBarHomeClick
	ActionBarHomeClicked = False
End Sub

Sub Activity_KeyPress (KeyCode As Int) As Boolean
	Return B4XPages.Delegate.Activity_KeyPress(KeyCode)
End Sub

Sub Activity_Resume
	B4XPages.Delegate.Activity_Resume
	If config.IsInit Then 
		'--- config power options if flag is set
		fnc.ProcessPowerFlags
	End If
End Sub

Sub Activity_Pause (UserClosed As Boolean)
	B4XPages.Delegate.Activity_Pause
	Log("UserClosed:" & UserClosed)
	If UserClosed Then ExitApplication
End Sub

Sub Activity_PermissionResult (Permission As String, Result As Boolean)
	B4XPages.Delegate.Activity_PermissionResult(Permission, Result)
End Sub

Sub Create_Menu (Menu As Object)
	B4XPages.Delegate.Create_Menu(Menu)
End Sub

#if Java
public boolean _onCreateOptionsMenu(android.view.Menu menu) {
	 processBA.raiseEvent(null, "create_menu", menu);
	 return true;
	
}
#End If
#End Region


'==================================================================================
'==================================================================================


'--- 1 = off, 0 = on 
Public Sub Dim_ActionBar(On_off As Int)
	
	'--- Android 4 thing, you can dim the action bar
	'--- Android 4.4 has Imersive mode so we skip it
	
	Try
			
		If ph.SdkVersion >= API_ANDROID_4_0 And ph.SdkVersion < API_ANDROID_4_4 Then
			Dim r As Reflector
			r.Target = Activity
			r.RunMethod2("setSystemUiVisibility", On_off, "java.lang.int") '1 = SYSTEM_UI_FLAG_LOW_PROFILE
		Else
			If On_off = gblConst.ACTIONBAR_OFF Then 
				Activity_WindowFocusChanged(True)
			End If
		End If
		
	Catch
		'Log("DimBottomButtons - " & LastException)
	End Try 'ignore
	
End Sub



Public Sub Restart_App
'	' TODO, errors out, needs work
'	guiHelpers.Show_toast("Re-Starting Application...",2000)
'	Activity.Finish
'	Sleep(2200)
'	Dim r, r2 As Reflector
'	r.Target = r.GetActivity
'	r.Target = r.RunMethod("getApplicationContext")
'	r2.Target = r.RunMethod("getPackageManager")
'	Dim I As Intent = r2.RunMethod2("getLaunchIntentForPackage", r.RunMethod("getPackageName"), "java.lang.String" )
'	r.Target = I
'	r.RunMethod2("addFlags",  67108864, "java.lang.int")
'	StartActivity(I)
End Sub


#Region "InApp-Update"
'https://www.b4x.com/android/forum/threads/version-safe-apk-installation.87667/
Public Sub InstallNewVersion
	
	
	
	Wait For (CheckInstallationRequirements) Complete (Result As Boolean)
	If Result Then
		SendInstallIntent
	End If
End Sub

Private Sub CheckInstallationRequirements As ResumableSub
	If File.ExternalWritable = False Then
		MsgboxAsync("Storage card not available. Make sure that your device is not connected in USB storage mode.", "")
		Return False
	Else If ph.SdkVersion >= 26 And CanRequestPackageInstalls = False Then
		MsgboxAsync("Please allow me to install applications.", "")
		Wait For Msgbox_Result(Result As Int)
		Dim in As Intent
		in.Initialize("android.settings.MANAGE_UNKNOWN_APP_SOURCES", "package:" & Application.PackageName)
		StartActivity(in)
		Wait For Activity_Resume '<-- wait for Activity_Resume
		Return CanRequestPackageInstalls
	Else If CheckNonMarketAppsEnabled = False Then
		MsgboxAsync("Please enable installation of non-market applications." & CRLF & "Under Settings - Security - Unknown sources" _
			 & CRLF & "Or Settings - Applications - Unknown sources", "")
		Return False
	Else
		Return True
	End If
End Sub

Private Sub CanRequestPackageInstalls As Boolean
	Dim ctxt As JavaObject
	ctxt.InitializeContext
	Dim PackageManager As JavaObject = ctxt.RunMethod("getPackageManager", Null)
	Return PackageManager.RunMethod("canRequestPackageInstalls", Null)
End Sub

Private Sub CheckNonMarketAppsEnabled As Boolean
	If ph.SdkVersion >= 26 Then Return True
	If ph.SdkVersion < 17 Or ph.SdkVersion >= 21 Then
		Return ph.GetSettings("install_non_market_apps") = "1"
	Else
		Dim context As JavaObject
		context.InitializeContext
		Dim resolver As JavaObject = context.RunMethod("getContentResolver", Null)
		Dim global As JavaObject
		global.InitializeStatic("android.provider.Settings.Global")
		Return global.RunMethod("getString", Array(resolver, "install_non_market_apps")) = "1"
	End If
End Sub

Private Sub SendInstallIntent
	
	Dim ApkName As String = "2nd_app.apk"
	File.copy(File.DirAssets, ApkName, Starter.Provider.SharedFolder, ApkName)
	
	Dim i As Intent
	If ph.SdkVersion >= 24 Then
		i.Initialize("android.intent.action.INSTALL_PACKAGE", Starter.Provider.GetFileUri(ApkName))
		i.Flags = Bit.Or(i.Flags, 1) 'FLAG_GRANT_READ_URI_PERMISSION
	Else
		i.Initialize(i.ACTION_VIEW, "file://" & File.Combine(Starter.Provider.SharedFolder, ApkName))
		i.SetType("application/vnd.android.package-archive")
	End If
	StartActivity(i)
	
End Sub

#end region
