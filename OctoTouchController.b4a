Build1=Default,sadLogic.OctoTouchController
Build2=klipper,sadLogic.KlipperTouchController,klipper
File1=bed.png
File10=dlgSimpleApiOnOff.json
File11=dlgThemeSelect.bal
File12=dlgViewText.bal
File13=hotend.png
File14=LICENSE.txt
File15=MainPage2.bal
File16=mainstatcard.bal
File17=mb_info.png
File18=mb_question.png
File19=mb_stop.png
File2=dlgAbout.bal
File20=menucard2.bal
File21=menufiles.png
File22=menumovement.png
File23=menuprint.png
File24=no_thumbnail.jpg
File25=pageFiles.bal
File26=pageMenu2.bal
File27=pageMovement.bal
File28=pagePrinting.bal
File29=splash.png
File3=dlgbedlevel.json
File30=splashklipper.png
File31=view_z_movement.bal
File32=viewAppUpdate.bal
File33=viewFilamentCtrl.bal
File34=viewfiles.bal
File35=viewMsgBox.bal
File36=viewMsgBox2.bal
File37=viewOctoSetup.bal
File38=viewPsuCtrl.bal
File39=viewPsuSetup.bal
File4=dlgFilamentCtrl.json
File40=viewPsuSetupSonOff.bal
File41=viewRoundSlider.bal
File42=viewSlidingWindow.bal
File43=wizbedlevel.json
File44=wizManualBedLevel.bal
File45=wizManualMeshBedLevel.bal
File5=dlggeneral.json
File6=dlgLogging.json
File7=dlgonoff.json
File8=dlgPower.json
File9=dlgprintersetup.json
FileGroup1=MISC
FileGroup10=JSON_CONFIGS
FileGroup11=DIALOG_CUSTOM_VIEWS
FileGroup12=DIALOG_CUSTOM_VIEWS
FileGroup13=MISC
FileGroup14=Default Group
FileGroup15=B4XPages
FileGroup16=Sub Cards
FileGroup17=MISC
FileGroup18=MISC
FileGroup19=MISC
FileGroup2=DIALOG_CUSTOM_VIEWS
FileGroup20=Sub Cards
FileGroup21=MAIN_MENU
FileGroup22=MAIN_MENU
FileGroup23=MAIN_MENU
FileGroup24=MISC
FileGroup25=VIEWS_PAGES
FileGroup26=VIEWS_PAGES
FileGroup27=VIEWS_PAGES
FileGroup28=VIEWS_PAGES
FileGroup29=MISC
FileGroup3=JSON_CONFIGS
FileGroup30=MISC
FileGroup31=Default Group
FileGroup32=DIALOG_CUSTOM_VIEWS
FileGroup33=DIALOG_CUSTOM_VIEWS
FileGroup34=VIEWS
FileGroup35=DIALOG_CUSTOM_VIEWS
FileGroup36=DIALOG_CUSTOM_VIEWS
FileGroup37=DIALOG_CUSTOM_VIEWS
FileGroup38=DIALOG_CUSTOM_VIEWS
FileGroup39=DIALOG_CUSTOM_VIEWS
FileGroup4=JSON_CONFIGS
FileGroup40=DIALOG_CUSTOM_VIEWS
FileGroup41=DIALOG_CUSTOM_VIEWS
FileGroup42=VIEWS
FileGroup43=JSON_CONFIGS
FileGroup44=DIALOG_CUSTOM_VIEWS
FileGroup45=DIALOG_CUSTOM_VIEWS
FileGroup5=JSON_CONFIGS
FileGroup6=JSON_CONFIGS
FileGroup7=JSON_CONFIGS
FileGroup8=JSON_CONFIGS
FileGroup9=JSON_CONFIGS
Group=MAIN
Library1=accessibility
Library10=designerutils
Library11=fileprovider
Library12=javaobject
Library13=json
Library14=keyvaluestore
Library15=okhttp
Library16=okhttputils2
Library17=oslibrary
Library18=phone
Library19=reflection
Library2=audio
Library20=runtimepermissions
Library21=viewsex
Library22=xui views
Library23=websocket
Library3=b4xcollections
Library4=b4xpages
Library5=b4xpreferencesdialog
Library6=bctoast
Library7=byteconverter
Library8=core
Library9=dateutils
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="14" android:targetSdkVersion="30"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~~\n~CreateResourceFromFile(Macro, Themes.LightTheme)~\n~'End of default text.~\n~~\n~'--- https://www.b4x.com/android/forum/threads/android-jar-targetsdkversion-minsdkversion.87610/~\n~'--- Non-ssl (non-https) communication is not permitted by default. It can be enabled in B4A v9+ by adding this line to the manifest editor:~\n~CreateResourceFromFile(Macro, Core.NetworkClearText)~\n~~\n~'--- Take over power functions~\n~AddPermission(android.permission.WAKE_LOCK)~\n~AddPermission(android.permission.WRITE_SETTINGS)~\n~~\n~AddPermission(android.permission.INTERNET)~\n~~\n~'--- app update crap~\n~AddManifestText(<uses-permission~\n~	android:name="android.permission.WRITE_EXTERNAL_STORAGE"~\n~	android:maxSdkVersion="18" />~\n~)~\n~~\n~AddApplicationText(~\n~  <provider~\n~  android:name="android.support.v4.content.FileProvider"~\n~  android:authorities="$PACKAGE$.provider"~\n~  android:exported="false"~\n~  android:grantUriPermissions="true">~\n~  <meta-data~\n~  android:name="android.support.FILE_PROVIDER_PATHS"~\n~  android:resource="@xml/provider_paths"/>~\n~  </provider>~\n~)~\n~CreateResource(xml, provider_paths,~\n~   <files-path name="name" path="shared" />~\n~)~\n~AddPermission(android.permission.REQUEST_INSTALL_PACKAGES)~\n~~\n~~\n~'************ Google Play Services Base ************  '--- Android 4.x SSL stuff~\n~'--- search for 'ProviderInstall'~\n~AddApplicationText(~\n~   <activity android:name="com.google.android.gms.common.api.GoogleApiActivity"~\n~  android:theme="@android:style/Theme.Translucent.NoTitleBar"~\n~  android:exported="false"/>~\n~    <meta-data~\n~  android:name="com.google.android.gms.version"~\n~  android:value="@integer/google_play_services_version" />~\n~)~\n~'************ Google Play Services Base (end) ************   '--- Android 4.x SSL stuff~\n~~\n~~\n~~\n~~\n~'===============================================================================~\n~~\n~''''https://www.b4x.com/android/forum/threads/android-jar-targetsdkversion-minsdkversion.87610/~\n~''''Non-ssl (non-https) communication is not permitted by default. It can be enabled in B4A v9+ by adding this line to the manifest editor:~\n~'''CreateResourceFromFile(Macro, Core.NetworkClearText)~\n~'''~\n~'''AddManifestText(~\n~'''~\n~'''	<Activity android:launchMode="singleInstance" />~\n~'''	<uses-sdk android:minSdkVersion="16" android:targetSdkVersion="18"/>~\n~'''	~\n~'''	<supports-screens android:largeScreens="true" ~\n~'''	    android:xlargeScreens="true"~\n~'''    	android:normalScreens="false" ~\n~'''    	android:smallScreens="false" ~\n~'''		android:requiresSmallestWidthDp="800"~\n~'''    	android:anyDensity="true"/>~\n~'''~\n~'''		~\n~'''	<uses-permission android:name="android.permission.CHANGE_WIFI_MULTICAST_STATE"/>~\n~'''	<uses-permission android:name="android.permission.GET_ACCOUNTS" />~\n~'''	~\n~''')~\n~'''~\n~'''SetActivityAttribute(main, android:windowSoftInputMode, adjustPan|stateHidden)~\n~'''~\n~'''SetApplicationAttribute(android:hardwareAccelerated, "true")~\n~'''SetApplicationAttribute(android:theme, "@android:style/Theme.Holo.Light")~\n~'''SetApplicationAttribute(android:icon, "@drawable/icon")~\n~'''SetApplicationAttribute(android:label, "$LABEL$")~\n~'''~\n~'''AddPermission(android.permission.REBOOT)~\n~'''AddPermission(android.permission.WAKE_LOCK)~\n~'''AddPermission(android.permission.ACCESS_NETWORK_STATE)~\n~'''~\n~'''#if not (KE)~\n~'''AddPermission(android.permission.MEDIA_UNMOUNTED)~\n~'''AddPermission(android.permission.MEDIA_MOUNTED)~\n~'''~\n~'''AddReceiverText(svrMediaHelper,~\n~'''<intent-filter>~\n~'''    <action android:name="android.intent.action.MEDIA_MOUNTED" />~\n~'''	<data android:scheme="file"/>~\n~'''</intent-filter>)~\n~'''~\n~'''AddReceiverText(svrMediaHelper,~\n~'''<intent-filter>~\n~'''    <action android:name="android.intent.action.MEDIA_UNMOUNTED" />~\n~'''	<data android:scheme="file"/>~\n~'''</intent-filter>)~\n~'''#end if~\n~'''~\n~'''#if not (KE)~\n~'''AddReceiverText(eu.dgconsulting.appupdating.newinst2,~\n~'''  <intent-filter>~\n~'''  <action android:name="android.intent.action.PACKAGE_REPLACED" />~\n~'''    <data android:scheme="package" />~\n~'''  </intent-filter>)~\n~''' #end if~\n~~\n~
Module1=|relative|src\miscClasses\AppUpdate
Module10=|relative|src\dialogs\dlgAbout
Module11=|relative|src\dialogs\dlgAndroidPowerOptions
Module12=|relative|src\dialogs\dlgAppUpdate
Module13=|relative|src\dialogs\dlgBedLevelMeshWiz2
Module14=|relative|src\dialogs\dlgBedLevelSetup
Module15=|relative|src\dialogs\dlgBedLevelWiz
Module16=|relative|src\dialogs\dlgBrightness
Module17=|relative|src\dialogs\dlgFilamentCtrl
Module18=|relative|src\dialogs\dlgFilamentSetup
Module19=|relative|src\dialogs\dlgGeneralOptions
Module2=|relative|src\custom_controls\AutoTextSizeLabel
Module20=|relative|src\dialogs\dlgIpOnOffSetup
Module21=|relative|src\dialogs\dlgKlipperSysCmds
Module22=|relative|src\dialogs\dlgListbox
Module23=|relative|src\dialogs\dlgMsgBox
Module24=|relative|src\dialogs\dlgMsgBox2
Module25=|relative|src\dialogs\dlgNumericInput
Module26=|relative|src\dialogs\dlgOctoPsuCtrl
Module27=|relative|src\dialogs\dlgOctoPsuSetup
Module28=|relative|src\dialogs\dlgOctoSetup
Module29=|relative|src\dialogs\dlgOctoSysCmds
Module3=|relative|src\B4XPages\B4XMainPage
Module30=|relative|src\dialogs\dlgOnOffCtrl
Module31=|relative|src\dialogs\dlgPrinterSetup
Module32=|relative|src\dialogs\dlgThemeSelect
Module33=|relative|src\dialogs\dlgViewText
Module34=|relative|src\dialogs\dlgZLEDSetup
Module35=|relative|src\miscClasses\DSE_Layout
Module36=|relative|src\helperClasses\fileHelpers
Module37=|relative|src\generic\fnc
Module38=|relative|src\generic\gblConst
Module39=|relative|src\helperClasses\guiHelpers
Module4=|relative|src\miscClasses\Beeper
Module40=|relative|src\miscClasses\guiMsgs
Module41=|relative|src\miscClasses\HeaterRoutines
Module42=|relative|src\miscClasses\HttpDownloadStr
Module43=|relative|src\octoPrint\HttpOctoRestAPI
Module44=|relative|src\miscClasses\InMemDB
Module45=|relative|src\octoPrint\JSONparsors\JsonParserFiles
Module46=|relative|src\octoPrint\JSONparsors\JsonParserMasterPrinterSettings
Module47=|relative|src\octoPrint\JSONparsors\JsonParsorConnectionStatus
Module48=|relative|src\octoPrint\JSONparsors\JsonParsorMain
Module49=|relative|src\octoPrint\JSONparsors\JsonParsorOctoVersion
Module5=|relative|src\miscClasses\CallSubUtils
Module50=|relative|src\octoPrint\JSONparsors\JsonParsorPlugins
Module51=|relative|src\klippy\KlippySocketParser
Module52=|relative|src\klippy\KlippyWebSocket
Module53=|relative|src\klippy\krpc
Module54=|relative|src\custom_controls\lmB4XImageViewX
Module55=|relative|src\generic\logMe
Module56=|relative|src\main\MasterController
Module57=|relative|src\helperClasses\objHelpers
Module58=|relative|src\octoPrint\oc
Module59=|relative|src\octoPrint\OctoSysCmds
Module6=|relative|src\octoPrint\CheckOctoConnection
Module60=|relative|src\pageViews\pageFiles
Module61=|relative|src\pageViews\pageMenu
Module62=|relative|src\pageViews\pageMovement
Module63=|relative|src\pageViews\pagePrinting
Module64=|relative|src\helperClasses\powerHelpers
Module65=|relative|src\octoPrint\RequestApiKey
Module66=|relative|src\b4xCustomizedClasses\sadB4XColorTemplate
Module67=|relative|src\b4xExtensionClasses\sadB4XDialogHelper
Module68=|relative|src\b4xCustomizedClasses\sadB4XDrawerAdvanced
Module69=|relative|src\b4xExtensionClasses\sadB4XDrawerAdvancedHelper
Module7=|relative|src\custom_controls\CircularProgressBar
Module70=|relative|src\b4xCustomizedClasses\sadB4XInputTemplate
Module71=|relative|src\b4xCustomizedClasses\sadClvSelections
Module72=|relative|src\b4xCustomizedClasses\sadPreferencesDialog
Module73=|relative|src\b4xExtensionClasses\sadPreferencesDialogHelper
Module74=|relative|src\custom_controls\sadRoundSlider
Module75=|relative|src\miscClasses\Stack
Module76=|relative|src\main\startAtBoot
Module77=|relative|src\main\Starter
Module78=|relative|src\helperClasses\strHelpers
Module79=|relative|src\miscClasses\SysInfo
Module8=|relative|src\generic\clrTheme
Module80=|relative|src\miscClasses\WildCardFilesList
Module9=|relative|src\generic\config
NumberOfFiles=45
NumberOfLibraries=23
NumberOfModules=80
Version=11.8
@EndOfDesignText@
#Region  Project Attributes 
	#if klipper
	#ApplicationLabel: KlipperTC
	#VersionCode: 1
	#VersionName: 0.8.0
	#SignKeyFile: ..\keystore\klipper\release.keystore
 	#SignKeyPassword: !!yt43k98!!  
	#Else
	#ApplicationLabel: OctoTC
	#VersionCode: 22
	#VersionName: 1.3.0
	#SignKeyFile: ..\keystore\octo\release.keystore
 	#SignKeyPassword: yt43k98!  
	#end if
	
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: false
#End Region

'--- support for websocket and older android versions
#AdditionalJar: com.google.android.gms:play-services-base

#region 	BUILD ACTIONS
'1 - Before the compiler cleans the objects folder (it happens after the code Is parsed).
'2 - Before R.java File Is generated.
'3 - Before the package Is signed (the APK File at this point Is: bin\temp.ap_).
'4 - Before the APK Is installed.
'5 - After the APK Is installed.​

#If klipper
#CustomBuildAction:1, %WINDIR%\system32\cmd.exe,  /c copy "..\icons\klipper\klipper-icon.png" "..\build-icon.png" /y 
#CustomBuildAction:1, %WINDIR%\system32\cmd.exe,  /c copy "..\icons\klipper\klipper-icon.png" "res\drawable\icon.png" /y 
#else
#CustomBuildAction:1, %WINDIR%\system32\cmd.exe,  /c copy "..\icons\octo\octo-icon.png" "..\build-icon.png" /y 
#CustomBuildAction:1, %WINDIR%\system32\cmd.exe,  /c copy "..\icons\octo\octo-icon.png" "res\drawable\icon.png" /y 
#End If
#end region


#Region  Activity Attributes 
	#FullScreen: True
	#IncludeTitle: False
	'#DebuggerForceFullDeployment: true
	'#DebuggerForceStandardAssets: true
	
	'---  ALWAYS SET FALSE IN DEBUG MODE
	#BridgeLogger: True 
	'-----------------------------------
#End Region

'#AdditionalJar: com.android.support:support-compat

'open project objects folder: ide://run?File=%WINDIR%\explorer.exe&Args=%PROJECT%
'Ctrl + click to export as zip: ide://run?=&File=%B4X%\Zipper.jar&Args=Project.zip

Sub Process_Globals
	
	Public ActionBarHomeClicked As Boolean
	
	'--- was in starter serves
	Public tmrTimerCallSub As CallSubUtils
	Public kvs As KeyValueStore
	Public db As InMemDB
	Public Provider As FileProvider
			
	'--- timers need to be in 'Process_Globals'
	Private tmrMain As Timer
	Private tmrFilesCheckChange As Timer
	Private tmrScreen As Timer
	
End Sub

Sub Globals
	Private mModule As String = "Main"
	Private ph As Phone	
	Private xui As XUI
	Private FirstRun As Boolean
End Sub


'===================================================================================

Sub Activity_Create(FirstTime As Boolean) 'ignore
	
	If FirstTime Then
		FirstRun = FirstTime '--- am I using this?
		Log("Activity_Create - FirstTime = True")
		tmrTimerCallSub.Initialize
		kvs.Initialize(xui.DefaultFolder, "kvs.db3")
		InitApp
		#if debug
		tmrTimerCallSub.CallSubDelayedPlus(Me,"tmrSplash_Tick",1000)   '--- just a splash screen
		#else
		tmrTimerCallSub.CallSubDelayedPlus(Me,"tmrSplash_Tick",3500)   '--- just a splash screen
		#End If
		FirstRun = False
	Else
		Log("Activity_Create - FirstTime = False")
	End If
	
	
	If tmrScreen.IsInitialized = False Then 
		tmrScreen.Initialize("tmrScreenPower",15000)	'--- init, will be reset later
	End If
	
	
	#if release
	Dim fcheck As Long = 3000
	#else
	Dim fcheck As Long = 8000
	#End If
	'--- TODO add 
	If tmrFilesCheckChange.IsInitialized = False Then 
		tmrFilesCheckChange.Initialize("tmrFilesCheckChange",fcheck) '--- printer files check change
	End If
		
	
	If tmrMain.IsInitialized = False Then 
		tmrMain.Initialize("tmrMain",2100) 	'--- main loop
	End If
		
	SetupFullScrn
	
	Dim pm As B4XPagesManager
	pm.Initialize(Activity)
	
End Sub



'===================================================================================

#Region "SCREEN_STUFF"
Private Sub SetupFullScrn
	
	'https://www.b4x.com/android/forum/threads/immersive-mode-hide-the-navigation-bar.90882/
	
	Dim lv As LayoutValues
	
	If ph.SdkVersion >= 28 Then
		'--- cutout mode...  ????
		Dim ctxt As JavaObject
		ctxt.InitializeContext
		ctxt.RunMethodJO("getWindow", Null).RunMethodJO("getAttributes", Null).SetField("layoutInDisplayCutoutMode", 1)
	End If

	If ph.SdkVersion >= 19 Then
		Activity_WindowFocusChanged(True)
		lv = GetRealSize
		Dim jo As JavaObject = Activity
		jo.RunMethod("setBottom", Array(lv.Height))
		jo.RunMethod("setRight", Array(lv.Width))
		Activity.Height = lv.Height
		Activity.Width = lv.Width
	Else
		'--- size *WITH* taskbar
		lv = GetDeviceLayoutValues
	End If
	
	guiHelpers.gScreenSizeAprox = lv.ApproximateScreenSize
	guiHelpers.gIsLandScape = Not (lv.Height > lv.Width)
	guiHelpers.gWidth  = lv.Width
	guiHelpers.gHeight = lv.Height
	Dim ac As Accessibility : guiHelpers.gFscale = ac.GetUserFontScale
	
	'--- lock orientation
	If Activity.width < Activity.Height Then ph.SetScreenOrientation(7) Else ph.SetScreenOrientation(6)
	
End Sub


Private Sub GetRealSize() As LayoutValues 
	
	Dim lv As LayoutValues
	Dim ctxt As JavaObject
	ctxt.InitializeContext
	Dim WindowManager As JavaObject = ctxt.RunMethodJO("getSystemService", Array("window"))
	Dim display As JavaObject = WindowManager.RunMethod("getDefaultDisplay", Null)
	Dim point As JavaObject
	point.InitializeNewInstance("android.graphics.Point", Null)
	display.RunMethod("getRealSize", Array(point))
	lv.Width = point.GetField("x")
	lv.Height = point.GetField("y")
	lv.Scale = 100dip / 100
	Return lv
	
End Sub
#end region


#region "TIMERS"
Private Sub tmrMain_Tick
	'--- master loop timer
	CallSub(B4XPages.MainPage.oMasterController,"tmrMain_Tick")
End Sub

Private Sub tmrFilesCheckChange_Tick
	'--- when files page is in focus, check files
	CallSub(B4XPages.MainPage.oMasterController,"tmrFilesCheckChange_Tick")
End Sub

Private Sub tmrSplash_Tick
	CallSubDelayed(B4XPages.MainPage,"HideSplash_StartUp")
End Sub


Public Sub tmrScreenPower_Tick
	
	Set_ScreenTmr
	
	Dim InSub As String = "tmrScreenPower_Tick"
	If config.logPOWER_EVENTS Or config.logTIMER_EVENTS Then 
		logMe.LogIt2("tmrScreenPower_Tick fired: " & tmrScreen.Interval,mModule,InSub)
	End If
	If oc.isPrinting Then 
		If config.logPOWER_EVENTS Then 
			logMe.LogIt2("We are printing",mModule,InSub)
		End If
		Set_ScreenTmr
		Return
	End If
	
	tmrScreen.Enabled = False
	fnc.BlankScreen
	
End Sub

'--- timer control subs --- --- timer control subs ---
'--- timer control subs --- --- timer control subs ---

Public Sub Set_ScreenTmr()

	If config.logTIMER_EVENTS Then logMe.LogIt("Set_ScreenTmr",mModule)
	
	Dim inSub As String = "Set_ScreenTmr"
	tmrScreen.Enabled = False

	If config.AndroidTakeOverSleepFLAG = False Then	
		If config.logPOWER_EVENTS Then logMe.LogIt("Power control is off",mModule)
		Return
	End If
	
	'--- any screen time flags set?
	If (config.AndroidNotPrintingScrnOffFLAG Or config.AndroidPrintingScrnOffFLAG) Then
		If oc.isPrinting And config.AndroidPrintingScrnOffFLAG Then
			If config.logPOWER_EVENTS Then 
				logMe.LogIt2("AndroidPrintingScrnOffFLAG = True: Min: " & config.AndroidPrintingMinTill,mModule,inSub)
			End If
			tmrScreen.Interval = config.AndroidPrintingMinTill * 1000 * 60 '--- we are printing
		Else
			If config.logPOWER_EVENTS Then 
				logMe.LogIt2("AndroidNotPrintingScrnOffFLAG = True: Min: " & config.AndroidNotPrintingMinTill,mModule,inSub)
			End If
			tmrScreen.Interval = config.AndroidNotPrintingMinTill * 1000 * 60
		End If
		tmrScreen.Enabled = True
	End If
	
	Dim_ActionBar(gblConst.ACTIONBAR_OFF) '--- turn off if it is on
	
End Sub

Public Sub TurnOnOff_ScreenTmr(EnableDisable As Boolean)
	If config.logTIMER_EVENTS Then logMe.LogIt("screen tmr on: " & EnableDisable,mModule)
	tmrScreen.Enabled = EnableDisable
End Sub

Public Sub TurnOnOff_MainTmr(EnableDisable As Boolean)
	If config.logTIMER_EVENTS Then logMe.LogIt("main tmr on: " & EnableDisable,mModule)
	tmrMain.Enabled = EnableDisable
End Sub

Public Sub TurnOnOff_FilesCheckChangeTmr(EnableDisable As Boolean)
	If config.logFILE_EVENTS Then logMe.LogIt("file tmr on: " & EnableDisable,mModule)
	If config.logTIMER_EVENTS Then logMe.LogIt("file tmr on: " & EnableDisable,mModule)
	tmrFilesCheckChange.Enabled = EnableDisable
End Sub

#end region

'===================================================================================
'==================================================================================

Sub Activity_WindowFocusChanged(HasFocus As Boolean)
	
	If ph.SdkVersion < gblConst.API_ANDROID_4_4 Then Return 
	
	'--- restore imersive mode
	If HasFocus Then
		Try
			Dim jo As JavaObject = Activity
			Sleep(300)
			jo.RunMethod("setSystemUiVisibility", Array As Object(5894)) '3846 - non-sticky
		Catch
			Log("error")
			'Log(LastException) 'This can cause another error
		End Try 'ignore
		
	End If
End Sub

'Template version: B4A-1.01
#Region Delegates

Sub Activity_ActionBarHomeClick
	ActionBarHomeClicked = True
	B4XPages.Delegate.Activity_ActionBarHomeClick
	ActionBarHomeClicked = False
End Sub

Sub Activity_KeyPress (KeyCode As Int) As Boolean
	Return B4XPages.Delegate.Activity_KeyPress(KeyCode)
End Sub

Sub Activity_Resume
	B4XPages.Delegate.Activity_Resume
	If config.IsInit Then 
		'--- config power options if flag is set
		fnc.ProcessPowerFlags
	End If
End Sub

Sub Activity_Pause (UserClosed As Boolean)
	B4XPages.Delegate.Activity_Pause
	Log("UserClosed:" & UserClosed)
	If UserClosed Then ExitApplication
End Sub

Sub Activity_PermissionResult (Permission As String, Result As Boolean)
	B4XPages.Delegate.Activity_PermissionResult(Permission, Result)
End Sub

Sub Create_Menu (Menu As Object)
	B4XPages.Delegate.Create_Menu(Menu)
End Sub

#if Java
public boolean _onCreateOptionsMenu(android.view.Menu menu) {
	 processBA.raiseEvent(null, "create_menu", menu);
	 return true;
	
}
#End If
#End Region


'==================================================================================
'==================================================================================


'--- 1 = off, 0 = on 
Public Sub Dim_ActionBar(On_off As Int)
	'--- Android 4 thing, you can dim the action bar
	'--- Android 4.4 has Imersive mode so we skip it
	Try
			
		If ph.SdkVersion >= gblConst.API_ANDROID_4_0 And ph.SdkVersion < gblConst.API_ANDROID_4_4 Then
			Dim r As Reflector
			r.Target = Activity
			r.RunMethod2("setSystemUiVisibility", On_off, "java.lang.int") '1 = SYSTEM_UI_FLAG_LOW_PROFILE
		Else
			If On_off = gblConst.ACTIONBAR_OFF Then 
				Activity_WindowFocusChanged(True)
			End If
		End If
		
	Catch
		'Log("DimBottomButtons - " & LastException)
	End Try 'ignore
	
End Sub
Public Sub Dim_ActionBar_Off
	Dim_ActionBar(gblConst.ACTIONBAR_OFF)
End Sub


Public Sub Restart_App
'	' TODO, errors out, needs work
'	guiHelpers.Show_toast("Re-Starting Application...",2000)
'	Activity.Finish
'	Sleep(2200)
'	Dim r, r2 As Reflector
'	r.Target = r.GetActivity
'	r.Target = r.RunMethod("getApplicationContext")
'	r2.Target = r.RunMethod("getPackageManager")
'	Dim I As Intent = r2.RunMethod2("getLaunchIntentForPackage", r.RunMethod("getPackageName"), "java.lang.String" )
'	r.Target = I
'	r.RunMethod2("addFlags",  67108864, "java.lang.int")
'	StartActivity(I)
End Sub




#region "IN APP UPDATE - NON MARKET"
'https://www.b4x.com/android/forum/threads/version-safe-apk-installation.87667/

Public Sub CheckInstallationRequirements As ResumableSub
	If File.ExternalWritable = False Then
		MsgboxAsync("Storage card not available. Make sure that your device is not connected in USB storage mode.", "")
		Return False
	Else If ph.SdkVersion >= 26 And CanRequestPackageInstalls = False Then
		MsgboxAsync("Please allow me to install applications.", "")
		Wait For Msgbox_Result(Result As Int)
		Dim in As Intent
		in.Initialize("android.settings.MANAGE_UNKNOWN_APP_SOURCES", "package:" & Application.PackageName)
		StartActivity(in)
		Wait For Activity_Resume '<-- wait for Activity_Resume
		Return CanRequestPackageInstalls
	Else If CheckNonMarketAppsEnabled = False Then
		MsgboxAsync("Please enable installation of non-market applications." & CRLF & "Under Settings - Security - Unknown sources" _
			 & CRLF & "Or Settings - Applications - Unknown sources", "")
		Return False
	Else
		Return True
	End If
End Sub

Private Sub CanRequestPackageInstalls As Boolean
	Dim ctxt As JavaObject
	ctxt.InitializeContext
	Dim PackageManager As JavaObject = ctxt.RunMethod("getPackageManager", Null)
	Return PackageManager.RunMethod("canRequestPackageInstalls", Null)
End Sub

Private Sub CheckNonMarketAppsEnabled As Boolean
	If ph.SdkVersion >= 26 Then Return True
	If ph.SdkVersion < 17 Or ph.SdkVersion >= 21 Then
		Return ph.GetSettings("install_non_market_apps") = "1"
	Else
		Dim context As JavaObject
		context.InitializeContext
		Dim resolver As JavaObject = context.RunMethod("getContentResolver", Null)
		Dim global As JavaObject
		global.InitializeStatic("android.provider.Settings.Global")
		Return global.RunMethod("getString", Array(resolver, "install_non_market_apps")) = "1"
	End If
End Sub

Private Sub SendInstallIntent(path As String) 'ignore
	Dim i As Intent, fullpath As String
	If ph.SdkVersion >= 24 Then
		fullpath = Provider.GetFileUri(fileHelpers.GetFilenameFromPath(gblConst.APK_NAME))
		i.Initialize("android.intent.action.INSTALL_PACKAGE", fullpath)
		i.Flags = Bit.Or(i.Flags, 1) '--- FLAG_GRANT_READ_URI_PERMISSION
	Else
		fullpath = "file://" & File.Combine(path, fileHelpers.GetFilenameFromPath(gblConst.APK_NAME))
		i.Initialize(i.ACTION_VIEW, fullpath)
		i.SetType("application/vnd.android.package-archive")
	End If
	logMe.LogIt("App update fullpath: " & fullpath, mModule)
	StartActivity(i)
End Sub

Public Sub Start_ApkInstall(args() As String)
	Wait For (CheckInstallationRequirements) Complete (Result As Boolean)
	If Result Then
		SendInstallIntent(args(0))
	End If
End Sub

#end region


 '--- from starter serves
#region STARTUP_INIT  
Private Sub InitApp
	Provider.Initialize
	
	If kvs.ContainsKey("install_date") = False Then
		kvs.Put("install_date",DateTime.Now)
		kvs.Put("version_code",Application.VersionCode)
	End If
	
	db.Initialize
	
	Dim oo1 As dlgAppUpdate : oo1.Initialize(Null)
	oo1.CleanUpApkDownload
	
	If Application.VersionCode <> kvs.Get("version_code").As(Int) Then
		Dim oo As AppUpdate : oo.Initialize : oo.RunPrgUpdate
	End If
	
	'File.WriteString(xui.DefaultFolder,"autostart.bin","boot")
	'fileHelpers.SafeKill("autostart.bin")
End Sub


Public Sub Clean_OldLogs
	logMe.DeleteOldFiles("*.log")
	'---check every X hours for old logs / crash files
	Dim hrs As Int = 12
	tmrTimerCallSub.CallSubDelayedPlus(Me,"Clean_OldLogs",60000 * 60 * hrs)
End Sub
Public Sub Clean_OldCrash
	logMe.DeleteOldFiles("*.crash")
	'---check every X hours for old logs / crash files
	Dim hrs As Int = 12
	tmrTimerCallSub.CallSubDelayedPlus(Me,"Clean_OldCrash",60000 * 60 * hrs)
End Sub
Public Sub InitLog_Cleanup
	'--- in about 15 minutes check for old logs, crash files (3 days old) and delete them
	tmrTimerCallSub.CallSubDelayedPlus(Me,"Clean_OldLogs",60000 * 13)
	tmrTimerCallSub.CallSubDelayedPlus(Me,"Clean_OldCrash",60000 * 17)
End Sub
#end region

Public Sub SetObjNull(obj As Object)
	obj = Null
End Sub
